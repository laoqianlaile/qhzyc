<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
	<display-name>中信Web统一架构</display-name>

	<!-- 配置项目根路径环境变量 -->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>CONFIG.ROOT</param-value>
	</context-param>
	
	<!-- log4j配置 -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/conf/log4j/log4j.xml</param-value>
	</context-param>
	<!-- 动态监测log4j配置变动，单位毫秒
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>60000</param-value>
	</context-param>
	-->
   
	<!-- spring配置 -->
	<context-param> 
		<param-name>contextConfigLocation</param-name> 
		<param-value>/WEB-INF/conf/spring/applicationContext*.xml,classpath*:conf/spring/applicationContext*.xml</param-value> 
	</context-param>
	
	<!-- webservice配置 -->
	<servlet>
		<servlet-name>CXFServlet</servlet-name>
		<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>CXFServlet</servlet-name>
		<url-pattern>/services/*</url-pattern>
	</servlet-mapping>
	
	<!-- 利用spring设置字符集过滤，防止页面乱码 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 过滤跨站脚本攻击 -->
	<filter>
		<filter-name>xssFilter</filter-name>
		<filter-class>com.ces.xarch.helps.web.filter.XssFilter</filter-class>
		<!-- 发现跨站脚本时显示的页面，默认为null
		<init-param>
			<param-name>errorPage</param-name>
			<param-value>/WEB-INF/views/error/xss.jsp</param-value>
		</init-param>
		-->
		<!-- 发现跨站脚本时返回的响应错误代码，默认为405
		<init-param>
			<param-name>errorCode</param-name>
			<param-value>405</param-value>
		</init-param>
		-->
		<!-- 发现跨站脚本时返回的响应错误信息，默认为请求不合法
		<init-param>
			<param-name>errorMessage</param-name>
			<param-value>请求不合法</param-value>
		</init-param>
		-->
	</filter>
	<!-- 资源加密过滤器，如果需要对信息进行加密请启用该过滤器 -->
	<!--filter>
		<filter-name>securityFilter</filter-name>
		<filter-class>com.ces.xarch.core.security.filter.SecurityFilter</filter-class>
		<init-param>
			<param-name>targetBean</param-name>
			<param-value>SecurityFilterChainProxy</param-value>
		</init-param>
	</filter-->
	<filter-mapping>
		<filter-name>xssFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 利用Spring解决JPA对象关闭导致延迟加载出错问题 -->
	<filter>
		<filter-name>Spring OpenEntityManagerInViewFilter</filter-name>
		<filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>Spring OpenEntityManagerInViewFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 利用 Spring Security 管理系统权限 -->
	<filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
      <filter-name>springSecurityFilterChain</filter-name>
      <url-pattern>/*</url-pattern>
    </filter-mapping>
	
	<!-- 启用sitemesh框架 -->
	<filter>
		<filter-name>sitemeshFilter</filter-name>
		<filter-class>com.opensymphony.sitemesh.webapp.SiteMeshFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>sitemeshFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
	</filter-mapping>
	
	<!-- 启动struts2功能 -->
	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
		<init-param>
			<param-name>config</param-name>
			<param-value>struts-default.xml,struts-plugin.xml,struts.xml,../conf/struts/struts-config.xml</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!--filter-mapping>
		<filter-name>securityFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping-->
	
	<!-- 配置Struts2的CleanUp的Filter,上传下载时最好加上这个过滤器，避免出现一些未知错误>
	<filter>
		<filter-name>cleanup</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ActionContextCleanUp</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>cleanup</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping -->
   
   <!-- 启动Log4j（设置spring log4jConfigLocation监听器） -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<!-- 启动spring容器（设置spring applicationContext监听器） -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- 启动spring security容器 -->
	<listener>
      <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
    </listener>
	<!-- 刷新Introspector防止内存泄露 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.apache.struts2.dispatcher.ng.listener.StrutsListener</listener-class>
	</listener>
	<!-- 初始化xarch框架 -->
	<listener>
		<listener-class>com.ces.xarch.core.web.listener.XarchListener</listener-class>
	</listener>

	<!-- 读取websercie配置信息 VVVVVVVVVVVVVVVV-->
	<listener>
		<listener-class>cesgroup.rear.lib.client.enterprise.ServiceInfoProviderFactory</listener-class>
	</listener>

	<context-param>
		<param-name>cesgroup.rear.lib.client.enterprise.ServiceInfoProvider</param-name>
		<param-value>com.ces.ServiceInfoProviderImpl</param-value>
	</context-param>

	<!-- 读取websercie配置信息 AAAAAAAAAAAAAAAAAAAA-->


	<servlet>
		<servlet-name>appInitServlet</servlet-name>
		<servlet-class>com.ces.config.servlet.AppInitServlet</servlet-class>
		<load-on-startup>2</load-on-startup>
	</servlet>
	
	<!-- 定时任务 -->
	<servlet>
	     <servlet-name>convergeDataServlet</servlet-name>
	    <servlet-class>com.ces.config.servlet.ConvergeDataServlet</servlet-class>
	    <init-param>
	    <param-name>startTask</param-name>
	    <param-value>true</param-value>
	    </init-param>
	    <init-param>
	    <param-name>intervalTime</param-name>
	    <param-value>1</param-value>
	    </init-param>
	    <load-on-startup>300</load-on-startup>
	</servlet>
	
	
	<!-- Session超时配置，单位分钟 -->
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
	
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
	
	<!-- 异常显示页面，当系统出现exception-type中指定的异常时，将跳转到location指定的页面进行展示 -->
	<error-page>
		<exception-type>com.ces.xarch.core.exception.FatalException</exception-type>
		<location>/WEB-INF/views/error/error.jsp</location>
	</error-page>
	<error-page>
		<exception-type>java.lang.Exception</exception-type>
		<location>/WEB-INF/views/error/500.jsp</location>
	</error-page>
	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>/WEB-INF/views/error/500.jsp</location>
	</error-page>
	
	<!-- 错误显示页面，当系统出现error-code中指定的错误响应代码时，将跳转到location指定的页面进行展示 -->
	<error-page>
		<error-code>405</error-code>
		<location>/WEB-INF/views/error/xss.jsp</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/WEB-INF/views/error/404.jsp</location>
	</error-page>
	<error-page>
		<error-code>403</error-code>
		<location>/WEB-INF/views/error/403.jsp</location>
	</error-page>
	<error-page>
		<error-code>401</error-code>
		<location>/WEB-INF/views/error/401.jsp</location>
	</error-page>
</web-app>